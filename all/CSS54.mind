{"root":{"data":{"id":"cwy6i0rq4vs0","created":1699928893606,"text":"CSS"},"children":[{"data":{"id":"cwy6wwj7k800","created":1699930059847,"text":"选择器优先级","note":"行内样式\n----------\nid选择器\n------------\nclass 类选择器 \n属性选择器a[ref=“eee”]     \n伪类选择器(元素上特定行为触发的样式、孩子选择器) :hover  :active    li:last-child\n---------------\n标签选择器   \n伪元素选择器（在已有元素前面或者后面追加元素）  ::before ::after\n-----------------------\n兄弟选择器h+p  子选择器ul>li  后代选择器 ul li 通配符选择器\n--------------\n除此次之外的优先级判断条件\n同级的情况  看后面\n！import 最大\n继承得到的样式优先级最低\n样式来源不同的时候 :\n内联样式>内部样式>外部样式>浏览器用户自定义样式>浏览器默认样式\n\n\n\n\n\n\n"},"children":[]},{"data":{"id":"cwy87a9lnog0","created":1699933694492,"text":"css中不可以被继承的样式有哪些","note":"这个地方直接记有继承属性的，然后排除法\n1、字体相关属性\nfont-family\nfont-weight\nfont-size \nfont-style\n\n2、文本系列属性\ntext-indent 文本缩进\ntext-align 水平对齐方式\nline-height 行高\nword-space 单词之间的间距\nletter-spacing 中文或者字母之间的间距\ntext-transform 控制文本的大小\ncolor  文本的颜色\n\n3、元素的可见性\nvisibility 控制元素的显示隐藏\n\n4、列表布局属性\nlist-style（list-style-type:circle inside 、list-style-image:url(photo.png)）\n\n5、光标属性：\ncursor：光标显示为何种形态\n"},"children":[]},{"data":{"id":"cwybrpc7u8g0","created":1699943757915,"text":"display的属性值和作用","note":"none 从文档流中移除  不显示\nblock  设置宽高，不同行显示\ninline  不可设置宽高，同行显示\ninline-block 可设置宽高，同行显示\nlist-item 列表样式标记，像块元素一样表示(前面加个序列小点标记)\ntable  块级表格展示（display：table相当于“table”标签、display：table-row相当于“tr”标签；和display：table-cell，相当于“td”标签）\ninherit  从父元素继承display属性的值"},"children":[]},{"data":{"id":"cwycbwtva3c0","created":1699945341503,"text":"inline、block、inline-block的区别","note":"inline 不可设置宽高  同行显示\n（padding 上下左右都可以设置  margin只能设置左右 不能设置上下）\nblock 设置框高  不同行像是\ninline-block 设置宽高 同行显示"},"children":[]},{"data":{"id":"cwycjd8wri00","created":1699945925790,"text":"隐藏元素的方法有哪些","note":"1、display none  不占位置\n2、visibility hidden 占据空间 不响应事件\n3、opacity：0 设置透明度 占据 响应\n4、position absolute  将元素定位到可视范围的外面\n5、z-index 设置成负数\n6、transform：scale(0,0)"},"children":[]},{"data":{"id":"cwycmztmva00","created":1699946210025,"text":"@import  和  link","note":"两个都是引入外部样式\n1、\n<link ref='stylesheet' href='' /> \nlink除了链接外部css资源还可以链接其他资源\n@import 属于css范畴只能链接css资源\n\n2、\nlink是xhtml标签 没有兼容问题\n@import 是css2.1 提出的 有兼容问题，低版本浏览器不支持\n\n3、\nlink 资源和页面一起加载\n，@import网页完全加载完成之后再开始加载资源\n\n4、\nlink支持JS控制DOM去修改样式，@import不支持\n\n"},"children":[]},{"data":{"id":"cwycuup1fgg0","created":1699946825777,"text":"transition和animation的区别","note":"transition表示过度动画、需要一个触发事件\ntransition族属性有以下内容：\ntransition-property  过\n度效果的CSS属性  width, heitht, color ;\ntransition-duration 过度动画的持续效果   1s, 1.5s, 2s ;\ntransition-timing-function 设置动画的时间函数\tease, linear, ease-in-out ;\ntransition-delay  设置动画的延长时间  1s, 1.5s, 2s ;\n\n\n\nanimation 表示自定义动画、不需要触发事件\n@keyframe  animationName{\n\t0%:'',\n    100%:'',\n}\n.box{\n\tanimation:animationName\n}\n\n\n\n\n\n\n\n\n"},"children":[]},{"data":{"id":"cwydmz4yje80","created":1699949029643,"text":"display none 和 visibility hidden 的区别","note":"1、display：none  不占位置，不响应事件\nvisibility ：hidden 表示 占位置 不响应事件\n\n2、display none 不继承\nvisibility hidden  子元素继承\n\n3、display会造成页面的重排\nvisibility 会造成页面的重绘\n\n\n4、display 不会被读屏器读到\nvisibility 会被读屏器读到"},"children":[]},{"data":{"id":"cwydrnc9rb40","created":1699949395785,"text":"伪元素和伪类的区别","note":"\n优先级：伪类>伪元素\n\n\n伪元素\n在内容元素的前后插入额外的元素或样式，但是不在文档生成\np::before {content:\"第一章：\";}\np::after {content:\"Hot!\";}\np::first-line {background:red;}\np::first-letter {font-size:30px;\n\n伪类 \n选择已有的元素添加样式。\na:hover {color: #FF00FF}\np:first-child {color: red}\n\n\n"},"children":[]},{"data":{"id":"cwye4pt1v1s0","created":1699950419887,"text":"requestAnimationframe 的理解","note":"requestAnimationframe是HTML5中实现动画的一种方式\n使用的语法：\nwindow.requestAnimationFrame(callback);\n\n他的优势：\nCPU节能、函数节流、减少DOM操作"},"children":[]},{"data":{"id":"cwye7g6yc480","created":1699950634052,"text":"对盒模型的理解","note":"标准盒子模型\nbox-sizeing  content-box   width =content\n怪异(IE)盒子模型\nbox-sizeing border-box width=content+padding +border"},"children":[]},{"data":{"id":"cwyee3wj6tc0","created":1699951155850,"text":"动画移动的时候 使用translate去定位 不用定位去移动是为什么","note":"translate 是 transform 属性的⼀个值。\n1、绝对定位会引起页面的重排和重绘，使⽤到 CPU。\n2、transform使浏览器为元素创建⼀个 GPU 图层，只会触发复合。\n3、translate改变位置时，元素依然会占据其原始空间。\n\n所以translate其实更高效，可以缩短平滑动画的绘制时间。"},"children":[]},{"data":{"id":"cwyegpr4fyg0","created":1699951360140,"text":"li和li之间的空白是什么？怎么消除","note":"标签之间的空白和换行会被解析成空白\n\n想要清除掉空白，就需要：\n1、清除li标签之间空格和换行符号\n\n2、父元素设置letter-spacing -8px 。 3、font-size0  子元素中重新设置正常值\n"},"children":[]},{"data":{"id":"cwyengkaiv40","created":1699951888685,"text":"css3的新属性","note":"border-raduis 圆角\ntext-shadow  文字阴影\ntransform  移动\ngradient  渐变\n新增了各种选择器  :not(.input)：所有 class 不是“input”的节点\n"},"children":[]},{"data":{"id":"cwyyx8gan7k0","created":1700009076869,"text":"可替换元素","note":"1、可替换元素有image video  input  \n这些标签可以根据属性的不同，显示不同的内容\n可替换元素的特点：\n元素不设置宽高，有自己的宽高\n元素有自己的一套样式\n所有替换元素  都是内联水平元素"},"children":[]},{"data":{"id":"cwyz3qyc15s0","created":1700009587327,"text":"常见的图片格式和使用场景","note":"BMP  无损 文件较大\nGIF、无损 支持动画和透明 适用色彩要求不高、文件体积不大\nJPEG、 色彩质量高，但是会压缩，一般不作为企业logo使用\nPNG-8、png-8除了不能动画支持，其他都能很好的取代gif\nPNG-24 无损，同样质量的图片png-24比BMP的质量好很多\nSVG  无损矢量图  放大也不会失真\nWebP 谷歌开发的新图片格式  支持透明度，并且它的文件体积更小\n"},"children":[]},{"data":{"id":"cwyzsroawrk0","created":1700011548001,"text":"CSS sprites 的理解","note":"精灵图 就是将很多张图片都包含到一张大图上图  通过backgroundImg  backgroundPosition 定位设置背景图片\n\n优点：\n减少向服务器的请求次数  减少图片文件大小\n缺点：开发的时候比较麻烦 需要使用Photoshop去对每个元素进行\n维护比较麻烦   如果维护了图片变大了就需要往下放，原先的css也需要变动"},"children":[]},{"data":{"id":"cwz05z8mvvc0","created":1700012583202,"text":"物理像素  像素密度 逻辑像素","note":"逻辑像素  414px * 896px\n\n物理像素（设备像素）分辨率    1242pt*2688pt\n\n像素密度ppi 设备像素，ppi越高显示的图片越清晰\n像素比 DPR device-pixel-ratio   1242/414=3  也就是3倍屏 ，也就是说屏幕的像素密度为 3。\n\n一倍屏幕像素为200px，那么3倍屏，就需要600px。\n\n上述就是说 1个逻辑像素=3个物理像素\n\n可以使用window.deivcePixelRatio 获取 像素比\n\n也可以使用媒体查询获取像素比\nmy-image { background: (low.png); }\n@media only screen and (min-device-pixel-ratio: 1.5) {\n  #my-image { background: (high.png); }\n}\n"},"children":[]},{"data":{"id":"cwz1i3jewwg0","created":1700016354041,"text":"margin和padding的使用场景","note":"margin 边距不需要背景颜色\npadding  边距需要背景颜色"},"children":[]},{"data":{"id":"cwz1paqkbc00","created":1700016918260,"text":"line-height","note":"内联元素的属性\n将line-height和height设置成同样的值，那么可以实现垂直方向的居中\n\n1、设置成px表示固定单位\n2、父元素设置line-hieght成数字1.5 或者 百分比105% 子元素的font-size 为18px   ，那么子元素行高就为18px*105% 18px*1.5\n\n","layout_mind_offset":{"x":-39.99999880790705,"y":5.000003844499531}},"children":[]},{"data":{"id":"cwz1u9qt7qw0","created":1700017307919,"text":"css优化和提高性能的方法","note":"1、加载性能\n减少使用@import（等页面加载完成之后再进行加载） 改用link（和页面一起加载）\n族属性拆分成单个单个进行定义\ncss压缩\n2、选择器性能\n关键选择器 放最后面（从右向左匹配的）\n避免使用通配符 *{}\n少使用标签  使用class\n少使用后代选择器 选择器的深度最好别超过三层\n用ID选择器就不用多余的内容了\n了解可继承属性 避免属性重复定义\n3、渲染性能\n慎重使用高性能消耗的属性 比如浮动 定位\n减少页面的重排和重绘\n属性值为0的时候不加单位\n小数的时候省略前面的0\n浏览器前缀的在前面定义  标准属性在后定义\n不使用@import\n选择器嵌套避免层级过深\n精灵图要谨慎使用\n正确使用display属性\n不乱使用WebFonts，体积庞大且一些浏览器在下载web fonts时会阻塞页面渲染损伤性能\n4、可维护性 健壮性\n将具有相同属性的样式抽离出来\n样式与内容分离\n"},"children":[]},{"data":{"id":"cwz28hq6lgo0","created":1700018422394,"text":"CSS样式的预处理器和后处理器","note":"预处理器 less scss sass stylus  \n预处理器 支持变量写法，复用，层级关系，循环等，让开发者写CSS更加灵活\n后处理器 postCss  添加浏览器私有前缀 实现浏览器兼容问题"},"children":[]},{"data":{"id":"cwz2e4sw9g00","created":1700018864445,"text":"双冒号和单冒号的区别","note":"双冒号是伪元素：\n在已有元素前后添加内容\n\n单冒号是伪类选择器：\n为已有元素的某个状态定义样式\n或者选择子元素\n\n：hover :active :fist-child\n"},"children":[]},{"data":{"id":"cwz2ggi393s0","created":1700019046641,"text":"display:inline-block  什么时候显示间隙","note":"标签之间有空格或者换行的时候就会出现空格\n\n消除空格的办法：\n1、清除标签之间的间隙\n2、父元素margin设置负值  letter-spacing 设置负值   font-size 设置0\n子元素再去设置成正常值"},"children":[]},{"data":{"id":"cwz2iid284w0","created":1700019207419,"text":"单行  多行  文本溢出隐藏","note":"单行\nwhite-space：nowarp  不换行\noverflow：hidden  溢出隐藏\ntext-overflow：ellipsis  加省略号\n\n多行\nwhite-space：warp //默认就是换行\ntext-overflow:ellipsis\noverflow:hidden\n\n\n"},"children":[]},{"data":{"id":"cwz2qx6bv000","created":1700019866577,"text":"less 和  sass 是什么？为什么要去使用这个东西","note":"less 和 sass 表示css预处理器\n\n结构清晰 便于扩展 语法更贴合JS的写法  "},"children":[]},{"data":{"id":"cwz6gjxebw80","created":1700030338537,"text":"对媒体查询的理解","note":"媒体查询 就是在指定的媒体上应用指定的样式。响应式布局的一种方式\n使用方式：\n1、link\n<link href='' rel='stylesheet' media=\"(max-width:800px)\" />\n当媒体不超出800px的时候 将引入该样式\n\n2、style标签里面写入\n\n<style > \n 屏幕设备最大宽度不超出1440px的时候使用这个\n@madie sreen and (max-width:1440px){\n  div.demo{}\n  }\n屏幕设备，高度不超出190px的时候使用这个样式\n@madie creen and (max-height:190px){\n  div.demo{}\n  }\n  \n</style>"},"children":[]},{"data":{"id":"cwz6yphw6lk0","created":1700031761215,"text":"对CSS工程化的理解","note":"1、css工程化可以提高复用和可维护\n2、工程化的工具有  ：预处理器Less、 Sass  、 后处理器postCSS、  css打包工具 webpack loader。\n预处理器为了书写习惯。\n后处理器 处理之后，加了浏览器前缀。\n\nwebpack 的css-loader 和 style-loader  。css-loader 对css进行降级编译处理 ，  style-loader 创建style标签，把css内容写入标签中。\nloader的顺序不能变 ，css-loader 的执行顺序一定要安排在 style-loader 的前面，不然会报错的。"},"children":[]},{"data":{"id":"cwz7ejd3kso0","created":1700033001691,"text":"如何判断元素到达可视区域","note":"首先要会访问下面这三个变量\n1、window.innerHeight  浏览器可视高度\n2、document.body.scrollTop || document.documentElement.scrollTop  浏览器滚动上去的距离\n3、images.offsetTop   当前图片距离整个文档顶部的距离（包括滚动进去的距离）\n\n元素是否在可视范围内就需要\ninnereight<offsetTop<scrollTop+innereight"},"children":[]},{"data":{"id":"cwz88o082iw0","created":1700035362721,"text":"z-index 在什么情况下是失效的","note":"父元素（position:relative）\n父元素 position relative的时候，子元素的z-index 会失效（解决设置成relative之外的值）。\n\n\n\n自身（position  float）\n元素没有设置position的值为static以外的值。\n元素在设置z-index的同时还设置了float浮动。（解决方法 去除浮动）\n"},"children":[]},{"data":{"id":"cwz8c7w17540","created":1700035641096,"text":"css 的transform有哪些属性","note":"不少\n缩放scale\n旋转rotate\ntranslate 缩放"},"children":[]},{"data":{"id":"cwz8dmdsx8g0","created":1700035751009,"text":"常见的css布局单位","note":"常用的布局单位包括像素（px），百分比（%），em，rem，vw/vh。\n\nem表示文本的相对长度  1em 相对父元素的字体大小font-size倍数\n\nrem 表示相对于根元素（html元素）的font-size的倍数。\n\n屏幕的宽为100vw \n屏幕的高为100vh\n\n\n\n\n\n"},"children":[]},{"data":{"id":"cwz8k7yrot40","created":1700036268174,"text":"px rem em 三者的区别","note":"px是固定的\nem 和 rem是相对长度，适用于响应式布局\n\n对于适配条件少的使用px即可\nrem  root-em\nrem是相对于html元素的字体大小。\n对于需要适配各种移动设备（分辨率差别较大的情况） 使用rem  合适。\nem是相对于其父元素来设置字体大小，对于任何元素都需要去知道其父元素的大小。\nem是相对于父元素的字体大小来说的，比如父元素的font-size是12px,当子元素的width是10em时，就是120px"},"children":[]},{"data":{"id":"cwz8mvvkrds0","created":1700036476953,"text":"两栏布局","note":"实现一个两栏布局（左边固定宽度、左侧自适应）\n\n1、利用浮动\ndiv.left{\nwidth:100px\nheight:100vh\nfloat:left\n}\ndiv.right{\nmargin-left:100px\nwidth:auto\nheight:100vh\n}\n\n2、利用BFC\ndiv.left{\nwidth:100px\nfloat:left //向左浮动\nheight:100vh\n\n}\n\ndiv.right{\nheight:100vh\noverflow:hidden //触发BFC，不受浮动元素影响\n}\n\n3、利用flex布局\ndiv.outer{\ndisplay:flex\nheight:100vh\n}\ndiv.left{\nwidth:100px\n\n}\ndiv.right{\nflex:1\n}\n\n4、利用做元素绝对定位\n子绝父相 left设置绝对定位 right设置margin-left\n.outer {\n  position: relative;\n  height: 100px;\n}\n.left {\n  position: absolute;\n  width: 200px;\n  height: 100px;\n  background: tomato;\n}\n.right {\n  margin-left: 200px;\n  background: gold;\n  height: 100px;\n}\n\n5、利用右元素设置绝对定位\n子绝父相 右边元素定位到指定位置即可\n\n\n\n\n"},"children":[]},{"data":{"id":"cwz97ex0z2o0","created":1700038085682,"text":"三栏布局","note":"三栏布局表示两边固定 中间自适应\n1、利用绝对定位\n（两边设置定位 中间设置margin）\n2、浮动 \n（左右两边分别设置浮动 中间设置margin，中间一定要排在最后）\n3、flex 父元素设置flex \n子元素按顺序从左往右排列，左右设置宽度固定，中间flex为1\n4、双飞翼\n中间列的margin\n\n5、圣杯模型\n父元素设置padding \n\n！！ 具体再去B站看看\n"},"children":[]},{"data":{"id":"cwz9vjw7tu80","created":1700039977257,"text":"水平垂直的实现","note":"1、利用绝对定位 加 translate\nposition:absolute \ntop:50% left:50%（先把顶点调整到页面中心）\ntransform:translate(-50%,-50%)（再偏移到自己宽高的一半）\n\n2、盒子有宽高的情况可以使用\n子绝父相 结合margin：auto\n.parent{\nposition：relative\n}\n.child{\nposition:abslute\ntop:0;\nleft:0,\nright:0\nbottom:0\nmargin:auto\n}\n\n\n3、盒子宽高已知的情况\n子绝父相 配合 margin负值去实现，负值是自身宽高的一半\n.parent{\nposition:relative\n}\n.child{\nposition:absolute\ntop:50%\nleft:50%\nmargin-left:-50px\nmargin-top:-50px\n}\n\n4、利用flex \n.parent{\ndisplay:flex\n}\n.child{\nalign-item:center //设置容器水平方向对齐\njustify-content:center  // 设置容器垂直方向对齐\n}\n\n\n\n"},"children":[]},{"data":{"id":"cwzw74ysbs80","created":1700102949549,"text":"怎么根据不同的移动端进行适配","note":"适配不同的像素比：\n媒体查询 根绝DPR去设置 使用不同倍数的图片\n可以保证 不同的像素比 图片不失真\n\n\n使用相对的单位 rem em  vw  vh。  实现页面尺寸自适应，适配不同的屏幕大小。px这个像素单位是固定的。"},"children":[]},{"data":{"id":"cwzxaigqxt40","created":1700106035135,"text":"flex布局的理解和使用场景","note":"flex即弹性盒子\n注意事项：\n设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。\n\nflex族属性介绍：\nflex-direction 主轴的方向（row、cloumn）\nflex-wrap   是否换行\nflex-flow（是flex-direction 和 flex-warp的缩写）\n\njustify-content 表示主轴的排列方式（center left right space-between）\n\nalign-items 表示主轴的交叉轴上怎么排列的\n\nalign-content  多根轴线的排列方式\n\n上面是弹性盒子属性\n------------\n\n下面弹性盒子子元素属性：\norder 排序，数值越小越靠前，默认为0\nflex-grow 放大比例，默认为0 \nflex-shrink 缩小比例，默认为1，\nflex-basis\n浏览器根据这个属性，计算主轴是否有多余空间（0 表示其他元素优先分配资源 auto自定义分配  200px表示固定宽度200px）\n\nflex是flex-grow flex-shrink flex-basis 的简写\n\n\nalign-self   单个元素在主轴垂直方向的排列方式\n\n\n\n\n\n\n\n"},"children":[]},{"data":{"id":"cx0282u920o0","created":1700119949945,"text":"响应式设计概念和原理","note":"关于原理： 基本原理是通过媒体查询（@media）查询检测不同的设备屏幕尺寸做处理。 \n关于兼容： 页面头部必须有mate声明的viewport。\n关于使用：\n<meta name=\"’viewport’\"  content=\"”width=device-width,\" initial-scale=\"1.\" maximum-scale=\"1,user-scalable=no”\">\n\n@media (max-width:100px){\ndiv.demo{}\n}\n\n@media (min-device-pixel-ratio:1.5){\ndiv.demo{\n}\n"},"children":[]},{"data":{"id":"cx0z9phoz800","created":1700213174242,"text":"为什么要清除浮动、清除浮动的方式","note":"浮动出现的问题：\n1、浮动的使用造成父元素高度塌陷 \n2、自己会出现脱离文档流 其他元素会受到浮动元素的影响\n\n清除浮动的方式：\n1、父级div添加height\n2、浮动元素后面添加 div 元素，并添加样式{lear:both}\n3、给父级加上overflow：hidden  或者overflow auto\n4、::after  伪元素。 \n使用zoom:1 触发hasLayout(这个是因为IE6-7不支持:after）。\ndiv:：after{\ncontent:'',\nheight:0,\ndisplay:block,\nclear: both;\n}\ndiv{\n*zoom:1,//这个地方是兼容IE6-7\n}\n\n"},"children":[]},{"data":{"id":"cx1m4pv9xao0","created":1700277668771,"text":"使用clear清除浮动的原理","note":"1、clear :both  right  left  none\nclear 只对块元素有效 。\nclear： 元素盒子不能和前面的元素相邻，避免浮动元素对该元素的影响，而不是清除掉浮动。\nclear属性设置之后只能控制自己不去接触前面的浮动，不能控制和后面浮动的关系。所以单独的去clear right  left  是不对的，clear:both 靠谱点。\n\n但是一般使用伪元素结合clear的方式清除浮动：\n::after 伪元素默认是内联样式\n所以要设置display block\n完整代码\n.clear::after{  content:'';  display: block;   clear:both;}\n\n\n\n"},"children":[]},{"data":{"id":"cx1mc4c80pk0","created":1700278248820,"text":"对BFC的理解，怎么创建BFC","note":"1、BFC的理解\nBFC是一个独立的容器 BFC容器不受外界影响 也不影响外界\n\n\n2、BFC 创建的条件（float position display overflow）\n根元素  body  就是一个BFC\n元素设置浮动 float 除none 以外的值\t\n元素设置绝对定位 position(absolute fixed)\ndisplay table-cell flex  inline-block \noverflow hidden auto srcoll\n\n3、BFC的特点\n垂直方向，从上到下，文档流排列方式一样。\nBFC里面上下相邻的两个容器的margin会重叠。\n计算BFC的高度，需要计算内部浮动的高度。\nBFC区域不会与浮动的容器发生重叠。\nBFC是独立容器，内部元素不会影响外部元素。\n里面元素左margin值和容器的左border相重叠\n\n\n\n4、BFC的作用\n解决margin重叠的问题  （两个上下相邻的块元素 垂直方向会出现margin-top 100px margin-bottom 100px  他们一起的margin为100px ）\n子元素浮动之后会造成高度塌陷的问题（父元素设置overflow hidden）  \n创建自适应两栏布局:左元素浮动 右元素overflow：hidden 去除左元素的影响\n高度塌陷我记得是对的，yzh还怀疑我？？然后我还自我怀疑了，所以别人对我的质疑不一定都是对的！\n\n\n\n\n"},"children":[]},{"data":{"id":"cx4x958q04g0","created":1700613727771,"text":"position 的值， 和值的区别","note":"(static、relative、absolute、fixed、sticky、inherit）\nstatic： 默认值，元素处于现在正常的文档流中。\nrelative：  相对于自己原本位置的定位。\nabsolute： 相对于设置了static以外值 position属性的第一个父元素  如果没有这样的第一个父元素，那就以body元素作为父元素（脱离文档流）。\nfixed：绝对定位相对body定位  （脱离文档流）。\nsticky： 粘性定位 没滚定之前是相对定位，也没有脱离文档流。等到滚动的时候脱离文档流。\ninherit： 继承父元素的 position 属性。"},"children":[]},{"data":{"id":"cx4y1lo8ed40","created":1700615957734,"text":"什么是margin重叠  如何解决","note":"1、两个上下相邻的元素 margin-top 100px  margin-bottom 100px 会合并折叠成100px\n\n2、折叠的原则\n两个正数 取最大的\n一正一负  向加取结果\n两个负值 取更小的那个\n\n3、解决方法\t\n兄弟元素之间重叠：\n底部元素display：inline-block\n底部元素设置浮动 float\n底部元素position 的值设置成 absolute\n父子元素之间重叠：\n父元素加入 overflow hidden\n父元素添加透明边框 border：1px soild transparent \n子元素设置行内盒子   display: inline-block\n子元素加入浮动属性或定位 float除none以外的值  position设置static以外的值\n\n\n"},"children":[]},{"data":{"id":"cx4ynpq2gyo0","created":1700617690564,"text":"元素的层叠顺序","note":"从上往下的顺序为：\n\nz-index>0\nz-index=0\ninline\nfloat\nblock \nz-index<0\nbackground /border\n"},"children":[]},{"data":{"id":"cx4zsybpji00","created":1700620922217,"text":"定位使用的注意事项","note":"position 为fixed absolute的时候 float是不生效的。\n\n"},"children":[]},{"data":{"id":"cx50lfnf3ag0","created":1700623154127,"text":"absolute和fixed的共同和不同点","note":"共同点：脱离文档流\n不同点:\n1、 absolute的根元素可以设置，fixed的根元素是浏览器。\n2、有滚动条的页面中滚动时，fixed不动，absolute会随之滚动\n\n"},"children":[]},{"data":{"id":"cx50pwl7ihs0","created":1700623504456,"text":"对粘性定位的理解sticky","note":"其实就是在在 position:relative 与 position:fixed 定位之间切换。\n\n在可视范围内类似 position：relative\n在可视范围之外类似于 position：fixed。"},"children":[]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}