{"root":{"data":{"id":"czxi3083i740","created":1710828485639,"text":"版本管理"},"children":[{"data":{"id":"czxi3if3w8o0","created":1710828525245,"text":"本地版本控制系统","note":"优点：简单，有内置的，不需要额外去下载。\n缺点：不支持多人远程协作"},"children":[]},{"data":{"id":"czxi4jq4jhk0","created":1710828606453,"text":"集中式版本控制系统","note":"优点：适合多人团队协作开发，代码集中化管理。\n缺点：单点故障，必须联网，无法单机工作。\n代表工具有SVN、CVS。"},"children":[]},{"data":{"id":"czxi4q4jrc80","created":1710828620385,"text":"分布式版本控制系统","note":"分布式版本管理系统每个计算机都有一个完整的仓库，可本地提交，可以做到离线工作，则不用像集中管理那样因为断网情况而无法工作。\n\n优点：\n适合多人团队协作开发\n代码集中化管理\n可以离线工作\n每个计算机都是一个完整仓库\n\n代表工具：Git  HG"},"children":[{"data":{"id":"czxidzqtm2w0","created":1710829346601,"text":"git的理解","note":"git是一个分布式版本控制软件。\n\n修改文件，git status有三种状态：\n已修改 modified\n已暂存 staged\n已提交 committed\n\n\nGit 主要分成了四部分：\n工作区：相当于本地写代码的区域。(git checkout 切换分支、git pull 拉取最新的代码）\n\ngit add 暂存区：保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。\n\ngit commit 本地仓库：提交更新，找到暂存区域的文件，将快照永久性存储到 Git 本地仓库。\n\ngit push远程仓库：远程的仓库，如github。\n\n\n\n\n\n"},"children":[]},{"data":{"id":"czxiee3aww00","created":1710829377830,"text":"Git中 fork, clone,branch这三个概念，有什么区别?","note":"fork 分叉，克隆 出一个（仓库的）新拷贝（包含了原来的仓库，如分支、Tag、提交）。\n使用场景，对于某一个项目来说，自己不属于开发者中的一员，那么只能先fork别人的代码，fork成自己仓库的内容，然后clone到本地进行修改之后，再向原来的项目发起pull request。\n\nclone文件从远程代码仓下载到本地，从而形成一个本地代码仓\n\nbranch简单而言就是开启另一个分支， 使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线.\n\n\n区别：\nfork类似branch，但是创建一个自己的仓库。\nbranch是创建一个仓库的一个分支。\nclone是对将文件从远程代码仓下载到本地，从而形成一个本地代码仓。"},"children":[]},{"data":{"id":"czxien34rn40","created":1710829397411,"text":"Git常用的指令有哪些","note":"git init [project-name]：初始化一个Git代码仓库。\ngit add .  提交全部文件修改到缓存区。\n\ngit add <具体某个文件路径+全名> 提交某些文件到缓存区\n\ngit diff 查看当前代码 add后，会 add 哪些内容\n\ngit diff --staged查看现在 commit 提交后，会提交哪些内容\n\ngit status 查看当前分支状态\n\ngit pull <远程仓库名> <远程分支名> 拉取远程仓库的分支与本地当前分支合并\n\ngit pull <远程仓库名> <远程分支名>:<本地分支名> 拉取远程仓库的分支与本地某个分支合并\n\n","image":"https://static.vue-js.com/0a10f3c0-f7b0-11eb-991d-334fd31f0201.png","imageTitle":"git常用指令速查","imageSize":{"width":200,"height":126}},"children":[]},{"data":{"id":"czxievi8zkg0","created":1710829415739,"text":"Git 中 HEAD、工作树和索引之间的区别？"},"children":[]},{"data":{"id":"czxif4yg6zc0","created":1710829436310,"text":"git pull 和 git fetch 的理解？有什么区别？"},"children":[]},{"data":{"id":"czxifa1xops0","created":1710829447405,"text":"git stash 的理解？应用场景？"},"children":[]},{"data":{"id":"czxifefu30g0","created":1710829456952,"text":"git rebase 和 git merge的理解？区别？"},"children":[]},{"data":{"id":"czxifjuxrhs0","created":1710829468749,"text":" git 发生冲突的场景？如何解决？"},"children":[]},{"data":{"id":"czxifq1y0ew0","created":1710829482234,"text":"git reset 和 git revert 的理解？区别？"},"children":[]}]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}