{"root":{"data":{"id":"czv6yr12qv40","created":1710594000045,"text":"webpack工作原理"},"children":[{"data":{"id":"czv71nd5fnk0","created":1710594227160,"text":"webpack打包的流程？","note":"webpack 是一个串行过程，它的工作流程就是将各个插件串联起来。\n\nwebpack 的构建流程：\n1、初始化流程：配置文件中读取参数、shell 语句合并参数、初始化插件在执行环境中所需要的参数；\n2、编译构建流程：从 Entry 发出，调用对应 Loader 去翻译文件内容，在找到对应 Module 去递归编译处理；\n3、输出流程：编译之后 Module 组合成 Chunk，把 Chunk 转换成文件，输出文件系统。\n\n\n整个的生命周期：\nentry-option ：初始化 option\nrun\ncompile： 真正开始的编译，在创建 compilation 对象之前\ncompilation ：生成好了 compilation 对象\nmake 从 entry 开始递归分析依赖，准备对每个模块进行 build\nafter-compile： 编译 build 过程结束\nemit ：在将内存中 assets 内容写到磁盘文件夹之前\nafter-emit ：在将内存中 assets 内容写到磁盘文件夹之后\ndone： 完成所有的编译过程\nfailed： 编译失败的时候\n\n\n\n"},"children":[]},{"data":{"id":"czv71qod47k0","created":1710594234369,"text":"说一下webpack Loader","note":"webpack中的\n\n\nLoader特性：\n\n\n常见的Loader："},"children":[{"data":{"id":"czxdfnwptlk0","created":1710815372015,"text":"Loader是什么","note":"loader 是文件加载器，能够加载资源文件，并对css、sass、png等文件进行一些处理，诸如编译、压缩等，最终一起打包到指定的文件中"},"children":[]},{"data":{"id":"czxdfv2fvbc0","created":1710815387598,"text":"Loader特性","note":"loader支持链式调用，最终变为js代码。\nloader 可以是同步的，也可以是异步的。\nloader 运行在 Node.js 中，并且能够执行任何操作。\nloader 能够产生额外的任意文件。\n可以通过 loader 的预处理函数，为 JavaScript 生态系统提供更多能力。压缩、打包、语言翻译和更多其他特性。"},"children":[]},{"data":{"id":"czxdfxxijbc0","created":1710815393831,"text":"常见的Loader","note":"style-loader: 将css添加到DOM的内联样式标签style里。\n\ncss-loader :允许将css文件通过require的方式引入，并返回css代码\n\nless-loader: 处理less\n\nsass-loader: 处理sass\n\npostcss-loader: 用postcss来处理CSS\n\nfile-loader: 分发文件到output目录并返回相对路径\n\nurl-loader: 和file-loader类似，但是当文件小于设定的limit时可以返回一个Data Url\n\nhtml-minify-loader: 压缩HTML\n\nbabel-loader :用babel来转换ES6文件到ES\n\n\n\n"},"children":[]}]},{"data":{"id":"czv71utfcoo0","created":1710594243382,"text":"说一下webpack Plugin"},"children":[{"data":{"id":"czxdq42nlr40","created":1710816190844,"text":"Plugin是什么","note":"plugin为webpack赋予各种灵活的功能，例如打包优化、资源管理、环境变量注入等，目的在于解决loader 无法实现的其他事。它们会运行在 webpack 的不同周期。\n\n"},"children":[]},{"data":{"id":"czxdq8x3vo80","created":1710816201392,"text":"Plugin特性","note":"其本质是一个具有apply方法javascript对象。\n整个编译生命周期都可以使用compiler对象去调用apply 方法。"},"children":[]},{"data":{"id":"czxdqf75z340","created":1710816215061,"text":"常见的Plugin","note":"HtmlWebpackPlugin，⾃动生成⼀个 html ⽂文件，并把打包生成的js 模块引⼊到该 html 中。\n\n\nclean-webpack-plugin删除旧的构建目录\n\nmini-css-extract-plugin提取 CSS 到一个单独的文件中\n\n\nDefinePlugin一个webpack内置的插件，不需要安装，允许在编译时创建配置的全局对象。\n\n\ncopy-webpack-plugin复制文件或目录到执行区域，"},"children":[]}]},{"data":{"id":"czxdei2ue5s0","created":1710815280960,"text":"webpack loader 和 plugin区别？","layout_mind_offset":{"x":-10,"y":0},"note":"运行时间上的区别：\nloader 运行在打包文件之前。\nplugins 在整个编译周期都起作用。\n\n\n工作shish"},"children":[]},{"data":{"id":"czxdef1ekw00","created":1710815274343,"text":"webpack热更新原理？"},"children":[]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}